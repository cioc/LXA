# ------------------- New -----------------------------------------------------------------------------------
def makeFSM(morphology, Signatures, start, end):
	stateDict= dict()
	signumber = 0
	howmanywords = 3
	numberOfSignaturesToDisplay = 9
	SortedListOfSignatures = sorted( Signatures.items(), lambda x,y: cmp(len(x[1]), len(y[1]) ) , reverse=True)
	for sig, stemset in SortedListOfSignatures:
		stemlist = list(stemset)
		stateDict[signumber] = State(sig)		
		for i in range(howmanywords):
			if i == len(stemlist):
				break			 
			start[stemlist[i]] = stateDict[signumber]
		for affix in sig.split('-'):
			stateDict[signumber][affix] = end
		signumber += 1
		if signumber > numberOfSignaturesToDisplay:
		 	break
	get_graph(morphology).draw('morphology.png',prog='dot')


# ---------------------------------------------------------#
def decorateFilenameWithIteration (filename, outfolder, extension ):
 	
	# Check that logfilename does NOT contain a (.
 	filenameLength = len(filename)
	filenames = os.listdir(outfolder)	 
	suffixes = list()	
	maxvalue = 0 
	for thisfilename in filenames:			 	
		pieces = thisfilename.partition("(") 
		if thisfilename[0:filenameLength] == filename:
			remainder = thisfilename[ len(filename): ] 		#chop off the left-side of the thisfile's name, the part that is filename			 
			if thisfilename[ -1 * len(extension): ] == extension:
				remainder = remainder[:-1 * len(extension) ]	#chop off the extension				 
				if len(remainder) > 0 and remainder[0] == "(" and remainder[-1] == ")":
					stringFileNumber = remainder[1:-1]			 	 
					if stringFileNumber > maxvalue:
						maxvalue = int(stringFileNumber)
	if maxvalue > 0:		 
		filename = outfolder + filename + "(" + str(maxvalue + 1)+ ")" + extension
	else:
		filename = outfolder +filename + "(0).txt"
 	return filename
# ---------------------------------------------------------#
